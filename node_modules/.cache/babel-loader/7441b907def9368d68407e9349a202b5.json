{"ast":null,"code":"import store from '../../config/store';\nimport { SPRITE_SIZE, MAP_WIDTH, MAP_HEIGHT } from '../../config/constants';\nexport default function handleMovement(player) {\n  function getNewPosition(direction) {\n    const oldPos = store.getState().player.position;\n\n    switch (direction) {\n      case 'West':\n        return [oldPos[0] - SPRITE_SIZE, oldPos[1]];\n\n      case 'East':\n        return [oldPos[0] + SPRITE_SIZE, oldPos[1]];\n\n      case 'North':\n        return [oldPos[0], oldPos[1] - SPRITE_SIZE];\n\n      case 'South':\n        return [oldPos[0], oldPos[1] + SPRITE_SIZE];\n    }\n  }\n\n  function observerBoundaries(oldPos, newPos) {\n    return newPos[0] >= 0 && newPos[0] <= MAP_WIDTH && newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT ? newPos : oldPos;\n  }\n\n  function dispatchMove(direction) {\n    const oldPos = store.getState().player.position;\n    store.dispatch({\n      type: 'MOVE_PLAYER',\n      payload: {\n        position: observerBoundaries(oldPos, getNewPosition(direction))\n      }\n    });\n  }\n\n  function handleKeyDown(e) {\n    e.preventDefault();\n\n    switch (e.keyCode) {\n      case 37:\n        return dispatchMove('West');\n\n      case 38:\n        return dispatchMove('North');\n\n      case 39:\n        return dispatchMove('East');\n\n      case 40:\n        return dispatchMove('South');\n\n      default:\n        console.log(e.keyCode);\n    }\n  }\n\n  window.addEventListener('keydown', e => {\n    handleKeyDown(e);\n  });\n  return player;\n}","map":{"version":3,"sources":["/home/tricon/mine/dungeon-game/src/features/player/movement.js"],"names":["store","SPRITE_SIZE","MAP_WIDTH","MAP_HEIGHT","handleMovement","player","getNewPosition","direction","oldPos","getState","position","observerBoundaries","newPos","dispatchMove","dispatch","type","payload","handleKeyDown","e","preventDefault","keyCode","console","log","window","addEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,wBAAnD;AAEA,eAAe,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC3C,WAASC,cAAT,CAAwBC,SAAxB,EAAmC;AAC/B,UAAMC,MAAM,GAAGR,KAAK,CAACS,QAAN,GAAiBJ,MAAjB,CAAwBK,QAAvC;;AACA,YAAOH,SAAP;AACI,WAAK,MAAL;AACI,eAAO,CAAEC,MAAM,CAAC,CAAD,CAAN,GAAUP,WAAZ,EAAyBO,MAAM,CAAC,CAAD,CAA/B,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,CAAEA,MAAM,CAAC,CAAD,CAAN,GAAUP,WAAZ,EAAyBO,MAAM,CAAC,CAAD,CAA/B,CAAP;;AACJ,WAAK,OAAL;AACQ,eAAO,CAAEA,MAAM,CAAC,CAAD,CAAR,EAAaA,MAAM,CAAC,CAAD,CAAN,GAAUP,WAAvB,CAAP;;AACR,WAAK,OAAL;AACY,eAAO,CAAEO,MAAM,CAAC,CAAD,CAAR,EAAaA,MAAM,CAAC,CAAD,CAAN,GAAUP,WAAvB,CAAP;AARhB;AAUH;;AAED,WAASU,kBAAT,CAA4BH,MAA5B,EAAoCI,MAApC,EAA4C;AACxC,WAAQA,MAAM,CAAC,CAAD,CAAN,IAAa,CAAb,IAAkBA,MAAM,CAAC,CAAD,CAAN,IAAaV,SAAhC,IACCU,MAAM,CAAC,CAAD,CAAN,IAAa,CAAb,IAAkBA,MAAM,CAAC,CAAD,CAAN,IAAaT,UADhC,GAC8CS,MAD9C,GACuDJ,MAD9D;AAEH;;AAED,WAASK,YAAT,CAAuBN,SAAvB,EAAkC;AAC9B,UAAMC,MAAM,GAAGR,KAAK,CAACS,QAAN,GAAiBJ,MAAjB,CAAwBK,QAAvC;AACAV,IAAAA,KAAK,CAACc,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE,aADK;AAEXC,MAAAA,OAAO,EAAE;AACLN,QAAAA,QAAQ,EAAEC,kBAAkB,CAACH,MAAD,EAASF,cAAc,CAACC,SAAD,CAAvB;AADvB;AAFE,KAAf;AAMH;;AAED,WAASU,aAAT,CAAwBC,CAAxB,EAA2B;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,YAAOD,CAAC,CAACE,OAAT;AACI,WAAK,EAAL;AACI,eAAOP,YAAY,CAAC,MAAD,CAAnB;;AACJ,WAAK,EAAL;AACQ,eAAOA,YAAY,CAAC,OAAD,CAAnB;;AACR,WAAK,EAAL;AACQ,eAAOA,YAAY,CAAC,MAAD,CAAnB;;AACR,WAAK,EAAL;AACI,eAAOA,YAAY,CAAC,OAAD,CAAnB;;AACJ;AACIQ,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACE,OAAd;AAVR;AAYH;;AACDG,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCN,CAAD,IAAO;AACtCD,IAAAA,aAAa,CAACC,CAAD,CAAb;AACH,GAFD;AAGA,SAAOb,MAAP;AACH","sourcesContent":["import store from '../../config/store'\nimport { SPRITE_SIZE, MAP_WIDTH, MAP_HEIGHT } from '../../config/constants'\n\nexport default function handleMovement(player) {\n    function getNewPosition(direction) {\n        const oldPos = store.getState().player.position\n        switch(direction) {\n            case 'West':\n                return [ oldPos[0]-SPRITE_SIZE, oldPos[1]]\n            case 'East':\n                return [ oldPos[0]+SPRITE_SIZE, oldPos[1]]   \n            case 'North':\n                    return [ oldPos[0], oldPos[1]-SPRITE_SIZE]\n            case 'South':\n                        return [ oldPos[0], oldPos[1]+SPRITE_SIZE]\n        }\n    }\n\n    function observerBoundaries(oldPos, newPos) {\n        return (newPos[0] >= 0 && newPos[0] <= MAP_WIDTH) && \n               (newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT) ? newPos : oldPos\n    }\n\n    function dispatchMove (direction) {\n        const oldPos = store.getState().player.position\n        store.dispatch({\n            type: 'MOVE_PLAYER',\n            payload: {\n                position: observerBoundaries(oldPos, getNewPosition(direction))\n            }\n        })\n    }\n\n    function handleKeyDown (e) {\n        e.preventDefault()\n        switch(e.keyCode) {\n            case 37:\n                return dispatchMove('West')\n            case 38:\n                    return dispatchMove('North')\n            case 39:\n                    return dispatchMove('East')\n            case 40:\n                return dispatchMove('South')\n            default:\n                console.log(e.keyCode)\n        }\n    }\n    window.addEventListener('keydown', (e) => {\n        handleKeyDown(e)\n    })\n    return player\n}"]},"metadata":{},"sourceType":"module"}