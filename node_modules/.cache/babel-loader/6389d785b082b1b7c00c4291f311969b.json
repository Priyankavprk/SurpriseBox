{"ast":null,"code":"var _jsxFileName = \"/home/tricon/mine/dungeon-game/src/features/map/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../config/store';\nimport { SPRITE_SIZE } from '../../config/constants';\nimport './styles.css';\n\nfunction getTileSprite(type) {\n  switch (type) {\n    case 0:\n      return 'grass';\n\n    case 3:\n      return 'tree';\n\n    case 4:\n      {\n        store.dispatch({\n          type: 'TREASURE_FOUND',\n          payload: {\n            treasureFound: true\n          }\n        });\n        return 'chest';\n      }\n\n    case 5:\n      return 'rock';\n\n    case 6:\n      return 'tree';\n  }\n}\n\nfunction MapTile(props) {\n  return React.createElement(\"div\", {\n    className: `tile ${getTileSprite(props.tile)}`,\n    style: {\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}\n\nfunction MapRow(props) {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      height: SPRITE_SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.tiles.map(tile => React.createElement(MapTile, {\n    tile: tile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n}\n\nfunction Map(props) {\n  return React.createElement(\"div\", {\n    style: {\n      width: '800px',\n      height: '480px',\n      border: '4px solid white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.tiles.map(row => React.createElement(MapRow, {\n    tiles: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tiles: state.map.tiles\n  };\n}\n\nexport default connect(mapStateToProps)(Map);","map":{"version":3,"sources":["/home/tricon/mine/dungeon-game/src/features/map/index.js"],"names":["React","connect","store","SPRITE_SIZE","getTileSprite","type","dispatch","payload","treasureFound","MapTile","props","tile","height","width","MapRow","tiles","map","Map","border","row","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,cAAP;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,UAAOA,IAAP;AACI,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;;AACJ,SAAK,CAAL;AAAQ;AACJH,QAAAA,KAAK,CAACI,QAAN,CAAe;AACXD,UAAAA,IAAI,EAAE,gBADK;AAEXE,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AAFE,SAAf;AAMA,eAAO,OAAP;AACH;;AAED,SAAK,CAAL;AACI,aAAO,MAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;AAlBR;AAqBH;;AAED,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAO;AACK,IAAA,SAAS,EAAG,QAAON,aAAa,CAACM,KAAK,CAACC,IAAP,CAAa,EADlD;AAEK,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAET,WADL;AAEHU,MAAAA,KAAK,EAAEV;AAFJ,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAOH;;AAED,SAASW,MAAT,CAAgBJ,KAAhB,EAAuB;AACnB,SAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AACC,IAAA,KAAK,EAAE;AACHE,MAAAA,MAAM,EAAET;AADL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKFO,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBL,IAAI,IAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CALE,CAAP;AAQH;;AAED,SAASM,GAAT,CAAaP,KAAb,EAAoB;AAChB,SACI;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,KAAK,EAAE,OADJ;AAEHD,MAAAA,MAAM,EAAE,OAFL;AAGHM,MAAAA,MAAM,EAAE;AAHL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKR,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBG,GAAG,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAPL,CADJ;AAWH;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACL,GAAN,CAAUD;AADd,GAAP;AAGH;;AAED,eAAed,OAAO,CAACmB,eAAD,CAAP,CAAyBH,GAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport store from '../../config/store'\nimport { SPRITE_SIZE } from '../../config/constants'\nimport './styles.css'\n\nfunction getTileSprite(type) {\n    switch(type) {\n        case 0:\n            return 'grass'\n        case 3:\n            return 'tree'\n        case 4: {\n            store.dispatch({\n                type: 'TREASURE_FOUND',\n                payload: {\n                    treasureFound: true,\n                }\n            })\n            return 'chest'\n        }\n            \n        case 5:\n            return 'rock'\n        case 6:\n            return 'tree'\n        \n    }\n}\n\nfunction MapTile(props) {\n    return <div \n                className={`tile ${getTileSprite(props.tile)}`}\n                style={{\n                    height: SPRITE_SIZE,\n                    width: SPRITE_SIZE\n                }}\n            />\n}\n\nfunction MapRow(props) {\n    return <div className=\"row\"\n            style={{\n                height: SPRITE_SIZE\n            }} \n           >\n        {props.tiles.map(tile => <MapTile tile={tile} />)}\n    </div>\n    \n}\n\nfunction Map(props) {\n    return (\n        <div \n            style={{\n                width: '800px',\n                height: '480px',\n                border: '4px solid white',  \n            }}\n        >\n            {props.tiles.map(row => <MapRow tiles={row}/>)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tiles: state.map.tiles\n    }\n}\n\nexport default connect(mapStateToProps)(Map)"]},"metadata":{},"sourceType":"module"}