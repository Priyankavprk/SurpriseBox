{"ast":null,"code":"var _jsxFileName = \"/home/tricon/mine/dungeon-game/src/features/map/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../config/store';\nimport { SPRITE_SIZE } from '../../config/constants';\nimport './styles.css';\n\nfunction getTileSprite(type) {\n  switch (type) {\n    case 0:\n      return 'grass';\n\n    case 3:\n      return 'tree';\n\n    case 4:\n      return 'chest';\n\n    case 5:\n      return 'rock';\n\n    case 6:\n      return 'tree';\n  }\n}\n\nfunction MapTile(props) {\n  return React.createElement(\"div\", {\n    className: `tile ${getTileSprite(props.tile)}`,\n    style: {\n      height: SPRITE_SIZE,\n      width: SPRITE_SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n}\n\nfunction MapRow(props) {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      height: SPRITE_SIZE\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.tiles.map(tile => React.createElement(MapTile, {\n    tile: tile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n}\n\nfunction Map(props) {\n  return React.createElement(\"div\", {\n    style: {\n      width: '800px',\n      height: '480px',\n      border: '4px solid white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.tiles.map(row => React.createElement(MapRow, {\n    tiles: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), props.treasureFound && React.createElement(\"video\", {\n    className: \"video-container video-container-overlay\",\n    autoPlay: true,\n    loop: true,\n    muted: \"\",\n    \"data-reactid\": \".0.1.0.0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    type: \"video/mp4\",\n    \"data-reactid\": \".0.1.0.0.0\",\n    src: \"../world/us.mp4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tiles: state.map.tiles,\n    treasureFound: state.map.treasureFound\n  };\n}\n\nexport default connect(mapStateToProps)(Map);","map":{"version":3,"sources":["/home/tricon/mine/dungeon-game/src/features/map/index.js"],"names":["React","connect","store","SPRITE_SIZE","getTileSprite","type","MapTile","props","tile","height","width","MapRow","tiles","map","Map","border","row","treasureFound","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,cAAP;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,UAAOA,IAAP;AACI,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;;AACJ,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAP;AAVR;AAaH;;AAED,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAO;AACK,IAAA,SAAS,EAAG,QAAOH,aAAa,CAACG,KAAK,CAACC,IAAP,CAAa,EADlD;AAEK,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAEN,WADL;AAEHO,MAAAA,KAAK,EAAEP;AAFJ,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAOH;;AAED,SAASQ,MAAT,CAAgBJ,KAAhB,EAAuB;AACnB,SAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AACC,IAAA,KAAK,EAAE;AACHE,MAAAA,MAAM,EAAEN;AADL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKFI,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBL,IAAI,IAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CALE,CAAP;AAQH;;AAED,SAASM,GAAT,CAAaP,KAAb,EAAoB;AAChB,SACI;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,KAAK,EAAE,OADJ;AAEHD,MAAAA,MAAM,EAAE,OAFL;AAGHM,MAAAA,MAAM,EAAE;AAHL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKR,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBG,GAAG,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAPL,EAQKT,KAAK,CAACU,aAAN,IACG;AAAO,IAAA,SAAS,EAAC,yCAAjB;AAA2D,IAAA,QAAQ,EAAE,IAArE;AAA2E,IAAA,IAAI,EAAE,IAAjF;AAAuF,IAAA,KAAK,EAAC,EAA7F;AAAgG,oBAAa,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,oBAAa,YAAtC;AAAmD,IAAA,GAAG,EAAC,iBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATR,CADJ;AAiBH;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHP,IAAAA,KAAK,EAAEO,KAAK,CAACN,GAAN,CAAUD,KADd;AAEHK,IAAAA,aAAa,EAAEE,KAAK,CAACN,GAAN,CAAUI;AAFtB,GAAP;AAIH;;AAED,eAAehB,OAAO,CAACiB,eAAD,CAAP,CAAyBJ,GAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport store from '../../config/store'\nimport { SPRITE_SIZE } from '../../config/constants'\nimport './styles.css'\n\nfunction getTileSprite(type) {\n    switch(type) {\n        case 0:\n            return 'grass'\n        case 3:\n            return 'tree'\n        case 4: \n            return 'chest'\n        case 5:\n            return 'rock'\n        case 6:\n            return 'tree'\n        \n    }\n}\n\nfunction MapTile(props) {\n    return <div \n                className={`tile ${getTileSprite(props.tile)}`}\n                style={{\n                    height: SPRITE_SIZE,\n                    width: SPRITE_SIZE\n                }}\n            />\n}\n\nfunction MapRow(props) {\n    return <div className=\"row\"\n            style={{\n                height: SPRITE_SIZE\n            }} \n           >\n        {props.tiles.map(tile => <MapTile tile={tile} />)}\n    </div>\n    \n}\n\nfunction Map(props) {\n    return (\n        <div \n            style={{\n                width: '800px',\n                height: '480px',\n                border: '4px solid white',  \n            }}\n        >\n            {props.tiles.map(row => <MapRow tiles={row}/>)}\n            {props.treasureFound &&    \n                <video className=\"video-container video-container-overlay\" autoPlay={true} loop={true} muted=\"\" data-reactid=\".0.1.0.0\">\n                    <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src=\"../world/us.mp4\"/>\n                </video>\n                \n            }\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tiles: state.map.tiles,\n        treasureFound: state.map.treasureFound\n    }\n}\n\nexport default connect(mapStateToProps)(Map)"]},"metadata":{},"sourceType":"module"}